 ------
 Usage HTML Analysis
 ------
 ${project.properties.siteAuthors}
 ------
 ------

Usage HTML Analysis

  Definitions and use-cases for the <<{{{./html-mojo.html}${project.artifactId}:html}}>> goal.

* The {{{./html-mojo.html}clashinspector:html}} goal

  This goal generates and opens a local HTML site for dynamic analysis of dependencies and dependency version clashes.

  The main features are the {{{dependency tree}<dependency tree>}} and the {{{clash-list}<clash-list>}}.
  Using {{{settings & properties}<settings & properties>}} you can define what dependencies you want to analyze.
  The {{{search dependencies}<search dependencies>}} feature enables a comfortable way to search and navigate through dependencies in the tree.

** dependency tree

  The dependency tree shows the dependencies of your project.

  Imagine you run this goal on a project <<<testproject.groupId:testproject-artifactId:1.0>>>. This project and its dependencies
  refer to several versions of <<<com.google.guava:guava>>>.

  In this case this project will be displayed in the top bar as follows:

[images/rootDep.png] root project visualization in the top bar in html-goal

  \
  Afterwards its dependencies will be represented as follows.

*** Default Dependency Representation

[images/dep.png] dependency visualization in html-goal\

 [[1]] The first line shows the <groupId> of the dependency, here <<<com.google.guava>>>

 [[2]] The second line shows the <artifactId> of the dependency, here <<<guava>>>

 [[3]] The third line shows

       [[a]] the <version> of the dependency, here <<<13.0.1>>>

       [[b]] the <scope> of the dependency, which could be

             * <compile> represented by a <<<(c)>>>

             * <test> represented by a <<<(t)>>>

             * <runtime> represented by a <<<(r)>>>

             * <provided> represented by a <<<(p)>>> or

             * <system> represented by a <<<(s)>>>

       [[c]] an <<<(o)>>> if the dependency is <optional>, here it is not optional

       [[d]] an <<<(u)>>> if this dependency is <used by Maven> regarding to the {{{./version_clash.html}nearest definiton}}, here it is the used version

 [[4]] On mouseover you have the opportunity to get {{{Detailed Dependency Representation}details}} of this dependency and to search this dependency on {{{http://www.maven.org}maven-central}} in a new tab, here this link would be {{{http://search.maven.org/#artifactdetails|com.google.guava|guava|13.0.1|jar}http://search.maven.org/#artifactdetails|com.google.guava|guava|13.0.1|jar}}.

 []

*** Detailed Dependency Representation

[images/depDetailed.png] detailed dependency visualization in html-goal\

 [[1]] Shows the <used version> of this project <<(groupId:artifactId)>>, here <<<com.google.guava:guava>>>.\ <On click:> {{{Highlighted Dependency}highlights}} and jumps to that <used version> in the tree. Here this dependency will be highlighted, because it is the used one.

 [[2]] Shows the <highest version> of this project. Higher versions lead to {{{./version_clash.html}CRITICAL version clashes}}.\ <On click:> {{{Highlighted Dependency}highlights}} all dependencies in the tree with the <highest version>. In this case the highest version of <<<com.google.guava:guava>>> is <<<14.0.1>>>.

 [[3]] Shows the <lowest version> of this project. Lower versions lead to {{{./version_clash.html}UNSAFE version clashes}}.\ <On click:> {{{Highlighted Dependency}highlights}} all dependencies in the tree with the <lowest version>. In this case the lowest version of <<<com.google.guava:guava>>> is <<<12.0>>>.

 []

*** Dependency Version Clashes

[images/depColors.png] dependency color visualization in html-goal\

  [[1]] gray: {{{./version_clash.html}<<SAFE>>}} dependency. This dependency

        [[a]] appears only once in the tree, so there can't be a version clash or

        [[b]] has the version which is used by Maven

  [[2]] yellow: {{{./version_clash.html}<<UNSAFE>>}} dependency. This dependency has a lower version than the used version.

  [[3]] red: {{{./version_clash.html}<<CRITICAL>>}} dependency. This dependency has a higher version than the used version.

  []

*** Highlighted Dependency

  Every dependency can be highlighted. This is how a highlighted dependency looks like:

[images/depHighlighted.png] highlighted dependency visualization in html-goal\

*** Dependency Tree Structure

	In the last chapters we talked about how dependencies look like.
  Now we will explain how they are structured as a tree.
	The following picture shows the tree for our already mentioned project <<<testproject.groupId:testproject-artifactId:1.0>>>.

[images/depTree.png] dependency tree visualization in html-goal\

	Dependencies are linked via arrows. There are four kind of arrows which will be explained as follows:

[images/arrowGray.png] gray navigation arrow\

	<<Gray arrow - dependency has dependencies>>\
  This arrow shows, that the dependency has one ore more {{{Dependency Version Clashes}safe dependencies}}.\
	<On click:> opens its dependencies.

[images/arrowYellow.png] yellow navigation arrow

  <<Yellow arrow - dependency has unsafe dependencies>>\
  This arrow shows, that the dependency has one ore more {{{Dependency Version Clashes}unsafe dependencies}} as.
  If this dependency has also critical dependencies the arrow of this dependency will be red instead.\
  <On click:> opens its dependencies.

[images/arrowRed.png] red navigation arrow

  <<Red arrow - dependency has critical dependencies>>\
  This arrow shows, that the dependency has one ore more {{{Dependency Version Clashes}critical dependencies}}.
  If this dependency has also unsafe dependencies the arrow of this dependency will remain red.\
  <On click:> opens its dependencies.

[images/arrowDotted.png] dotted navigation arrow

  <<Dotted arrow - dependency has eventualy dependencies>>\
  This arrow shows that the dependency has eventually one ore more dependencies, which are not resolved at this graph-point.
	Check the used version of this dependency to get deeper in the tree.

** clash-list

  TODO

** settings & properties

[images/settings.png] settings in html-goal\

  In this container you can set conditions of the dependency tree in advance.
	After the Setting was choosed click the "Apply Settings" button,
	a dependency tree which meet the conditions will be showed below.

** search dependencies

[images/search.png] search in html-goal\

  In this container you can search the dependencies which is showed in the tree area.
  The search function can be defined by groupId or artifactId or version.
	The number of search result will be showed between the two arrows.
	If the result is empty, "no result" will be showed between the two arrows.
	And all the search result will be highlighted. You can chose every result by click the arrow.
  With the clear button will all input Text be cleaned.